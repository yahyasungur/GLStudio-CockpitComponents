///////////////////////////////////////////////////////////////////////////////
// This file is generated by GL Studio.  DO NOT EDIT.
// To modify, run "glstudio GLStudio-FrontDisplay.gls", edit, then select Code/Generate All.
// Generated from GLStudio-FrontDisplay.gls using GL Studio 7.0.0
///////////////////////////////////////////////////////////////////////////////
#ifndef _GLStudio_FrontDisplayApp_h_
#define _GLStudio_FrontDisplayApp_h_

#include "gls_include.h"
#include "display.h"
#include "display_frame.h"
#include "callback_caller.h"

#include "dynamic_library.h"

// Fonts referenced by design and at run-time

#include "glpolygon.h"
#include "gls_button.h"
#include "gls_switch.h"
#include "gls_display_frame.h"


//////////////////// Provides support for creating DLLs ////////////////////////
#if (defined(GLSGEN_EXPORT_GLStudio_FrontDisplayClass) || \
     defined(GLSGEN_IMPORT_GLStudio_FrontDisplayClass) || \
     defined(GLS_EXPORT_GENERATED) || \
     defined(GLS_IMPORT_GENERATED)) \
     && defined(_MSC_VER) 
#  if defined(GLSGEN_EXPORT_GLStudio_FrontDisplayClass) || defined(GLS_EXPORT_GENERATED)
#    define GLSGEN_GLStudio_FrontDisplayClass_EXPORT __declspec(dllexport)
#  else
#    define GLSGEN_GLStudio_FrontDisplayClass_EXPORT __declspec(dllimport)
#  endif
#else
#  define GLSGEN_GLStudio_FrontDisplayClass_EXPORT
#endif
///////////////////////////////////////////////////////////////////////////////

//////////////////// User Code from section: "file GLStudio_FrontDisplayApp.h" ////////////

///////////////////////////////////////////////////////////////////////////////
namespace disti
{
class GLStudio_FrontDisplayClass : public glsDisplayFrame
{
public:
    typedef glsDisplayFrame _BaseClass;

    GLStudio_FrontDisplayClass(const char *name,int width,int height);
    GLSGEN_GLStudio_FrontDisplayClass_EXPORT void CreateObjects(void);
    void Create(void);
    typedef CallbackMethodCallerTemplate< GLStudio_FrontDisplayClass > CallbackMethodCaller;
    // Object creators
    // Textures
    static unsigned char * rgb_data_0[];
    static glsInlineImage image_data_0;
    static unsigned char * rgb_data_1[];
    static glsInlineImage image_data_1;
    static unsigned char * rgb_data_2[];
    static glsInlineImage image_data_2;
    static unsigned char * rgb_data_4[];
    static glsInlineImage image_data_4;
    static unsigned char * rgb_data_6[];
    static glsInlineImage image_data_6;
    static unsigned char * rgb_data_7[];
    static glsInlineImage image_data_7;
    static unsigned char * rgb_data_8[];
    static glsInlineImage image_data_8;
    static unsigned char * rgb_data_9[];
    static glsInlineImage image_data_9;
    static unsigned char * rgb_data_10[];
    static glsInlineImage image_data_10;
    static unsigned char * rgb_data_11[];
    static glsInlineImage image_data_11;

    // Geometry

private:

protected:
    GLPolygon *g1000_map;
    GLPolygon *lightCarpet;
    GLPolygon *mfd_bezel;
    GlsPushButton    *bottomButton1PushButton;
    GLPolygon *bottomButton1;
    GLPolygon *bottomButton1Pressed;
    GlsPushButton    *bottomButton2PushButton;
    GLPolygon *bottomButton2;
    GLPolygon *bottomButton2Pressed;
    GlsPushButton    *bottomButton3PushButton;
    GLPolygon *bottomButton3;
    GLPolygon *bottomButton3Pressed;
    GlsPushButton    *bottomButton4PushButton;
    GLPolygon *bottomButton4;
    GLPolygon *bottomButton4Pressed;
    GlsPushButton    *bottomButton5PushButton;
    GLPolygon *bottomButton5;
    GLPolygon *bottomButton5Pressed;
    GlsPushButton    *bottomButton6PushButton;
    GLPolygon *bottomButton6;
    GLPolygon *bottomButton6Pressed;
    GlsSwitch    *settingButton1Switch;
    GLPolygon *settingButtonUp;
    GLPolygon *settingButton1;
    GLPolygon *settingButtonDown;

public:
//////////////////// User Code from section: "Class Declaration" //////////////

///////////////////////////////////////////////////////////////////////////////
public:
    // Methods
    /** This code is called immediately after creating objects */
    virtual GLSGEN_GLStudio_FrontDisplayClass_EXPORT void Initialize ();
    /** This code is called every frame */
    virtual GLSGEN_GLStudio_FrontDisplayClass_EXPORT void Calculate (double time);
    virtual GLSGEN_GLStudio_FrontDisplayClass_EXPORT void MapOpacity (const int& );
    virtual GLSGEN_GLStudio_FrontDisplayClass_EXPORT int MapOpacity () const;
    // Variables
    int _mapOpacity;

    /** Get the details of the Cpp Interface
      * The actual interface is exposed in compiled code.
      * \param addToThisList A list to add to and then return.  Creates a new one if NULL.
      * \return A templated list.
      * The caller must call the corresponding free method to
      * safely free the memory.
      */

    virtual GLSGEN_GLStudio_FrontDisplayClass_EXPORT  InterfaceListType* GetCppInterfaceDescription(InterfaceListType* addToThisList= NULL );
    virtual GLSGEN_GLStudio_FrontDisplayClass_EXPORT  void GetCppInterfaceDescriptionFree(InterfaceListType* array);
};
} //namespace disti

extern disti::GLStudio_FrontDisplayClass *gLStudio_FrontDisplay;


#endif

