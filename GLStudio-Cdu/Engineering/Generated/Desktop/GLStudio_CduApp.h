///////////////////////////////////////////////////////////////////////////////
// This file is generated by GL Studio.  DO NOT EDIT.
// To modify, run "glstudio GLStudio-Cdu.gls", edit, then select Code/Generate All.
// Generated from GLStudio-Cdu.gls using GL Studio 7.0.0
///////////////////////////////////////////////////////////////////////////////
#ifndef _GLStudio_CduApp_h_
#define _GLStudio_CduApp_h_

#include "gls_include.h"
#include "display.h"
#include "display_frame.h"
#include "callback_caller.h"

#include "dynamic_library.h"

// Fonts referenced by design and at run-time
#include "GlsArialRegular12.h"

#include "glpolygon.h"
#include "gls_text_box.h"
#include "gls_display_frame.h"


//////////////////// Provides support for creating DLLs ////////////////////////
#if (defined(GLSGEN_EXPORT_GLStudio_CduClass) || \
     defined(GLSGEN_IMPORT_GLStudio_CduClass) || \
     defined(GLS_EXPORT_GENERATED) || \
     defined(GLS_IMPORT_GENERATED)) \
     && defined(_MSC_VER) 
#  if defined(GLSGEN_EXPORT_GLStudio_CduClass) || defined(GLS_EXPORT_GENERATED)
#    define GLSGEN_GLStudio_CduClass_EXPORT __declspec(dllexport)
#  else
#    define GLSGEN_GLStudio_CduClass_EXPORT __declspec(dllimport)
#  endif
#else
#  define GLSGEN_GLStudio_CduClass_EXPORT
#endif
///////////////////////////////////////////////////////////////////////////////

//////////////////// User Code from section: "file GLStudio_CduApp.h" ////////////

///////////////////////////////////////////////////////////////////////////////
namespace disti
{
class GLStudio_CduClass : public glsDisplayFrame
{
public:
    typedef glsDisplayFrame _BaseClass;

    GLStudio_CduClass(const char *name,int width,int height);
    GLSGEN_GLStudio_CduClass_EXPORT void CreateObjects(void);
    void Create(void);
    typedef CallbackMethodCallerTemplate< GLStudio_CduClass > CallbackMethodCaller;
    // Object creators
    // Textures
    static unsigned char * rgb_data_0[];
    static glsInlineImage image_data_0;
    static unsigned char * rgb_data_1[];
    static glsInlineImage image_data_1;
    static unsigned char * rgb_data_2[];
    static glsInlineImage image_data_2;
    static unsigned char * rgb_data_3[];
    static glsInlineImage image_data_3;
    static unsigned char * rgb_data_4[];
    static glsInlineImage image_data_4;

    // Geometry

private:

protected:
    GLPolygon *polygon;
    GLPolygon *CDU;
    GlsTextBox *textBox;
    GlsTextBox *textBox_2;
    GlsTextBox *textBox_2_1;
    GlsTextBox *textBox_1;

public:
//////////////////// User Code from section: "Class Declaration" //////////////

///////////////////////////////////////////////////////////////////////////////
public:
    // Methods
    /** This code is called immediately after creating objects */
    virtual GLSGEN_GLStudio_CduClass_EXPORT void Initialize ();
    /** This code is called every frame */
    virtual GLSGEN_GLStudio_CduClass_EXPORT void Calculate (double time);

    /** Get the details of the Cpp Interface
      * The actual interface is exposed in compiled code.
      * \param addToThisList A list to add to and then return.  Creates a new one if NULL.
      * \return A templated list.
      * The caller must call the corresponding free method to
      * safely free the memory.
      */

    virtual GLSGEN_GLStudio_CduClass_EXPORT  InterfaceListType* GetCppInterfaceDescription(InterfaceListType* addToThisList= NULL );
    virtual GLSGEN_GLStudio_CduClass_EXPORT  void GetCppInterfaceDescriptionFree(InterfaceListType* array);
};
} //namespace disti

extern disti::GLStudio_CduClass *gLStudio_Cdu;


#endif

